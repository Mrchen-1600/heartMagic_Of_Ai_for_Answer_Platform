spring:
  application:
    name: heartMagic-backend
  # 支持 swagger3
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  # session 配置
  session:
    store-type: redis
    # 30 天过期
    timeout: 2592000

  # 文件上传
  servlet:
    multipart:
      # 大小限制
      max-file-size: 10MB

  # 数据库配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/chenxiaofeng
    username:
    password:

  # Redis 配置
  redis:
    database: 1
    host: 127.0.0.1
    port: 6379
    password:

  # 分库分表配置
  shardingsphere:
    #数据源配置
    datasource:
      # 多数据源以逗号隔开即可
      names: chenxiaofeng
      chenxiaofeng:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/chenxiaofeng?allowPublicKeyRetrieval=true&useSSL=false&autoReconnect=true&characterEncoding=utf8
        username:
        password:
    # 规则配置
    rules:
      sharding:
        # 分片算法配置（定义怎么分表）
        sharding-algorithms:
          # 自定义分片规则名
          answer-table-inline:
            ## inline 类型是简单的配置文件里面就能写的类型，其他还有自定义类等等
            type: INLINE
            # 通过appId取模2得到$位置的值
            props:
              algorithm-expression: user_answer_$->{appId % 2}
        tables:
          user_answer:

            actual-data-nodes: chenxiaofeng.user_answer_$->{0..1}
            # 分表策略
            table-strategy:
              standard:
                sharding-column: appId
                sharding-algorithm-name: answer-table-inline

server:
  address:
  port: 8101
  servlet:
    context-path: /api
    # cookie 30 天过期
    session:
      cookie:
        max-age: 2592000


mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false
    log-impl: ''
  global-config:
    db-config:
      logic-delete-field: isDelete
      logic-delete-value: 1
      logic-not-delete-value: 0

# 接口文档配置
knife4j:
  enable: true
  openapi:
    title: "接口文档"
    version: 1.0
    group:
      default:
        api-rule: package
        api-rule-resources:
          - com.chenxiaofeng.heartMagicCube.controller


# COS对象存储
cos:
  client:
    accessKey:
    SecretKey: 
    region:
    bucket: 


# AI配置
ai:
  apiKey: 